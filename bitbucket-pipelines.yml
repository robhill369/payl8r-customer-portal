image: atlassian/default-image:4
pipelines:
  branches:
    #for ebextensions branch  just echo  
    '{ebextensions}':
      - step:
          name: "Echo for ebextensions branch"
          script:
            # Simple echo for this branch 
            - echo "This is the ebextensions branch"




    '{dev}':
      - step:
          name: Deploy to development server
          deployment: dev
          caches:
            - node
          script:
            - echo $SSH_TO_SERVER > my_ssh_key.pem  # $SSH_TO_SERVER is an environment variable storing your private SSH key
            - chmod 600 my_ssh_key.pem  # Set correct permissions for the key
            - npm install  # Install dependencies
            - ssh -i "my_ssh_key.pem" root@108.128.145.69 "cd /opt/customer-portal-dev && git pull origin dev && npm install && pm2 delete vite && pm2 start 'npm run dev -- --port=5174' --name vite"
            #- ssh -i "my_ssh_key.pem" root@108.128.145.69 "cd /opt/customer-portal-dev && git pull origin main && npm install && pm2 restart vite "  # SSH and execute commands on the server

    '{main}':
      - step:
          name: Install and Build assets
          deployment: main
          caches:
            - node
          script:
            - npm install
            - npm run build  # This should output the built project to a "dist" folder
          artifacts:  # Define artifacts to be passed to each future step.
            - dist/**  # The `dist` directory and all its contents
      - step:
          name: Deploy to CLOUDFRONT Production
          trigger: manual
          script:
            ## Download and configure the AWS CLI
            - curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws --version
            # Deploy "dist" folder to S3 bucket 
            - aws s3 sync dist/ s3://customer-portal-payl8r/
            # Invalidate CloudFront cache to ensure the latest assets are served
            - aws cloudfront create-invalidation --distribution-id E30SSZV4UWUSK1 --paths "/*"

    '{uat}':
      - step:
          name: Install and Build assets
          deployment: uat
          caches:
            - node
          script:
            - npm install
            - npm run build  # This should output the built project to a "dist" folder
            - npm run test
          artifacts:  # Define artifacts to be passed to each future step.
            - dist/**  # The `dist` directory and all its contents
      - step:
          name: Deploy to CLOUDFRONT  UAT
          script:
            ## Download and configure the AWS CLI
            - curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws --version
            # Deploy "dist" folder to S3 bucket 
            - aws s3 sync dist/ s3://customer-portal-payl8r-uat/
            # Invalidate CloudFront cache to ensure the latest assets are served
            - aws cloudfront create-invalidation --distribution-id E18GZF7QBKXHX4 --paths "/*"

