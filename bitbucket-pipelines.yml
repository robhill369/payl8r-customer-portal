image: atlassian/default-image:4
pipelines:
  branches:
    #for ebextensions branch  just echo  
    '{ebextensions}':
      - step:
          name: "Echo for ebextensions branch"
          script:
            # Simple echo for this branch 
            - echo "This is the ebextensions branch"




    '{dev}':
      - step:
          name: Deploy to development server
          caches:
            - node
          script:
            - echo $SSH_TO_SERVER > my_ssh_key.pem  # $SSH_TO_SERVER is an environment variable storing your private SSH key
            - chmod 600 my_ssh_key.pem  # Set correct permissions for the key
            - npm install  # Install dependencies
            - ssh -i "my_ssh_key.pem" root@108.128.145.69 "cd /opt/customer-portal-dev && git pull origin dev && npm install && pm2 delete vite && pm2 start 'npm run dev -- --port=5174' --name vite"
            #- ssh -i "my_ssh_key.pem" root@108.128.145.69 "cd /opt/customer-portal-dev && git pull origin main && npm install && pm2 restart vite "  # SSH and execute commands on the server

   '{main}':
      - step:
          name: Install and Build  to  S3 bucket
          caches:
            - node
          script:
            - npm install
            - npm run build  # This should output the built project to a "dist" folder
      - step:
          name: Deploy to S3
          script:
            ## Download and configure the AWS CLI
            - apt-get install unzip
            - curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - sh ./aws/install
            - aws --version
            # Deploy "dist" folder to your S3 bucket
            - aws s3 sync dist/ s3://customer-portal-payl8r/



#    '{dev}':
#      - step:
#          name: "Install npm dependencies and build assets"
#          caches:
#            - node
#          script: # Modify the commands below to build your repository.
#            - npm install
#            - npm run build  # if you need to build for production
#            #- npm run test
#          services:
#            #- mongo
#            - docker
#          artifacts:
#            - '**/*' 
#      - step:
#          name: "Adjust configs and package for dev  branch"
#          script:
#              # Clone the 'ebextensions' branch from the main repository
#              # to the '/tmp/ebextensions' directory in the pipeline environment
#              - git clone -b ebextensions git@bitbucket.org:socialmoney/payl8r-customer-portal.git /tmp/ebextensions
#                # List all the files in the '/tmp/ebextensions' directory to check if files were cloned successfully
#              - ls -lah /tmp/ebextensions
#                # Get the name of the current git branch and store it in the 'BRANCH' variable
#              - BRANCH="$(git rev-parse --abbrev-ref HEAD)"
#                # Overwrite or add the branch-specific '.platform' files from the cloned repository
#                # to the '.platform' directory in the current repository
#              - cp -af "/tmp/ebextensions/.platform.$BRANCH/." .platform/
#                # Overwrite or add the branch-specific '.ebextensions' files from the cloned repository
#              # to the '.ebextensions' directory in the current repository
#              - cp -af "/tmp/ebextensions/.ebextensions.$BRANCH/." .ebextensions/
#              #  Create a zip file of the current repository, excluding specified directories
#              - zip -r -9 application.zip . -x .git/**\* -x blog/**\* -x localhost.sql -x vendor/**\*
#                 #       Define the 'application.zip' file as an artifact that should be stored after the build
#          artifacts:
#            - application.zip
#      - step:
#          name: "Deploy to dev"
#          #trigger: manual
#          deployment: customer-portal-dev
#          script:
#            - BRANCH_NAME_CLEAN=$(git rev-parse --abbrev-ref HEAD | sed -r 's/[\.]/-/g')
#            - pipe: atlassian/aws-elasticbeanstalk-deploy:1.1.1
#              variables:
#                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
#                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
#                AWS_DEFAULT_REGION: "eu-west-1"
#                APPLICATION_NAME: "payl8r-customer-portal"
#                ENVIRONMENT_NAME: "Payl8r-customer-portal-env-DEV"
#                ZIP_FILE: "application.zip"
#                S3_BUCKET: "elasticbeanstalk-payl8r-bucket"
#                DEBUG: "false"
#                WAIT: "true"
#                WAIT_INTERVAL: '10'
#                WARMUP_INTERVAL: '0'
#                VERSION_LABEL: 'deploy-$BITBUCKET_BUILD_NUMBER-payl8r-customer-portal-env'
    '{UAT}':
      - step:
          name: "Install npm dependencies and build assets"
          caches:
            - node
          script: # Modify the commands below to build your repository.
            - npm install
            #- npm run test
          services:
            #- mongo
            - docker
          artifacts:
            - '**/*' 
      - step:
          name: "Adjust configs and package for UAT  branch"
          script:
              # Clone the 'ebextensions' branch from the main repository
              # to the '/tmp/ebextensions' directory in the pipeline environment
              #- git clone -b ebextensions git@bitbucket.org:socialmoney/payl8r-customer-portal.git /tmp/ebextensions
                # List all the files in the '/tmp/ebextensions' directory to check if files were cloned successfully
              ##- ls -lah /tmp/ebextensions
                # Get the name of the current git branch and store it in the 'BRANCH' variable
              #- BRANCH="$(git rev-parse --abbrev-ref HEAD)"
                # Overwrite or add the branch-specific '.ebextensions' files from the cloned repository
              # to the '.ebextensions' directory in the current repository
              #- cp -af "/tmp/ebextensions/.ebextensions.$BRANCH/." .ebextensions/
              #  Create a zip file of the current repository, excluding specified directories
              - zip -r -9 application.zip . -x .git/**\* -x blog/**\* -x localhost.sql -x vendor/**\*
                 #       Define the 'application.zip' file as an artifact that should be stored after the build
          artifacts:
            - application.zip
      - step:
          name: "Deploy to UAT"
          trigger: manual
          deployment: UAT
          script:
            - BRANCH_NAME_CLEAN=$(git rev-parse --abbrev-ref HEAD | sed -r 's/[\.]/-/g')
            - pipe: atlassian/aws-elasticbeanstalk-deploy:1.1.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: "eu-west-1"
                APPLICATION_NAME: "payl8r-customer-portal"
                ENVIRONMENT_NAME: "Payl8r-customer-portal-env-UAT"
                ZIP_FILE: "application.zip"
                S3_BUCKET: "elasticbeanstalk-payl8r-bucket"
                DEBUG: "false"
                WAIT: "true"
                WAIT_INTERVAL: '10'
                WARMUP_INTERVAL: '0'
                VERSION_LABEL: 'deploy-$BITBUCKET_BUILD_NUMBER-Payl8r-customer-portal-env-UAT'
#definitions:
#  services:
#    mongo:
#      image: mongo 
